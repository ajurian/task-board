generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id          String          @id @default(auto()) @map("_id") @db.ObjectId
    googleId    String          @unique
    email       String          @unique
    displayName String
    photoURL    String
    createdAt   DateTime        @default(now())
    taskBoards  TaskBoardUser[]

    @@map("users")
}

model TaskBoard {
    id                String          @id @default(auto()) @map("_id") @db.ObjectId
    displayName       String
    flowDirection     FlowDirection   @default(row)
    defaultPermission Int             @default(0)
    thumbnailData     Bytes?
    createdAt         DateTime        @default(now())
    taskLists         TaskList[]
    users             TaskBoardUser[]

    @@map("taskBoards")
}

model TaskBoardUser {
    id                 String    @id @default(auto()) @map("_id") @db.ObjectId
    userGoogleId       String
    user               User      @relation(fields: [userGoogleId], references: [googleId])
    taskBoardId        String    @db.ObjectId
    taskBoard          TaskBoard @relation(fields: [taskBoardId], references: [id])
    permission         Int
    isVisitor          Boolean
    joinedAt           DateTime  @default(now())
    recentlyAccessedAt DateTime  @default(now())

    @@unique(fields: [userGoogleId, taskBoardId], name: "index")
    @@map("taskBoardUsers")
}

model TaskList {
    id          String    @id @default(auto()) @map("_id") @db.ObjectId
    taskBoardId String    @db.ObjectId
    taskBoard   TaskBoard @relation(fields: [taskBoardId], references: [id])
    order       Int
    title       String
    sortBy      SortBy    @default(order)
    createdAt   DateTime  @default(now())
    tasks       Task[]

    @@map("taskLists")
}

model Task {
    id         String    @id @default(auto()) @map("_id") @db.ObjectId
    taskListId String    @db.ObjectId
    taskList   TaskList  @relation(fields: [taskListId], references: [id])
    order      Int       @default(0)
    title      String
    details    String
    isDone     Boolean   @default(false)
    createdAt  DateTime  @default(now())
    dueAt      DateTime?

    @@map("tasks")
}

enum FlowDirection {
    row
    column
}

enum SortBy {
    order
    dueAt
}
